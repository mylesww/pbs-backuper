name: Build and Release

on:
  # 手动触发
  workflow_dispatch:
  # 推送 tag 时触发
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux ARM64
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
            binary_name: pbs-backuper-linux-arm64
          # Linux x86_64
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
            binary_name: pbs-backuper-linux-amd64
          # macOS ARM64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
            binary_name: pbs-backuper-darwin-arm64
          # Windows x86_64
          - os: windows
            arch: amd64
            goos: windows
            goarch: amd64
            binary_name: pbs-backuper-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.binary_name }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: ${{ matrix.binary_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    # 只有在推送 tag 时才创建 release
    if: startsWith(github.ref, 'refs/tags/')
    # 为 release job 添加权限
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          find artifacts -name "pbs-backuper-*" -type f -exec sha256sum {} \; > checksums.txt
          cat checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/pbs-backuper-linux-arm64/pbs-backuper-linux-arm64
            artifacts/pbs-backuper-linux-amd64/pbs-backuper-linux-amd64
            artifacts/pbs-backuper-darwin-arm64/pbs-backuper-darwin-arm64
            artifacts/pbs-backuper-windows-amd64.exe/pbs-backuper-windows-amd64.exe
            checksums.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}